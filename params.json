{"google":"UA-345937-20","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Twitter-streamer","body":"# Twitter Streamer #\r\n*Twitter Streamer* is a Python command-line utility to dump [Twitter streaming API][streaming-apis] \r\n[statuses/filter][statuses-filter] method data to stdout.\r\n\r\nIt began life as a testing tool for [Tweepy][tweepy], and to satisfy my curiosity.\r\nIt's currently in an early beta test state, needs testing and improvement. \r\n(see [Known issues](#known-issues), below)\r\n\r\n## Prerequisites ##\r\nYou will need:\r\n\r\n 1. Python 2.7, [Tweepy][tweepy] and its prerequisites.\r\n 2. Your [Twitter API keys][keys].\r\n\r\nOnce you have your API keys, edit default.ini, providing the required elements.\r\n\r\n    [twitter_api]\r\n    # You must use the keys provided by Twitter for your account.\r\n    consumer_key: YOUR_CONSUMER_KEY\r\n    consumer_secret: YOUR_CONSUMER_SECRET\r\n    access_token_key: YOUR_ACCESS_TOKEN_KEY\r\n    access_token_secret: YOUR_ACCESS_TOKEN_SECRET\r\n\r\n## Usage ##\r\nBasic usage:\r\n\r\n    python streamer.py [options] \"track terms\" ...\r\n    \r\nYou can print a usage summary by invoking `streamer.py` with the `-h` or `--help` option.\r\n\r\nThe positional *track* parameter provides one or more [track search terms][parameters-track] for the [Twitter \r\n*statuses/filter* API][statuses-filter].  Commas denote an *or* relationship, while spaces\r\ndenote an *and* relationship.  \r\n\r\nYou can provide multiple *track* parameters, which will expand the search terms.\r\n\r\nPlease refer to the [track][parameters-track] documentation for specific limitations and \r\nusage examples.\r\n\r\n## Examples ##\r\nStream (filter) statuses containing both *car* **and** *dog*:\r\n\r\n    python streamer.py \"car dog\"\r\n\r\nStream statuses containing either *boat* **or** *bike*:\r\n\r\n    python streamer.py \"boat,bike\" \r\n    \r\nStream statuses containing (*water* **and** *drink*) *or* (*eat* **and** *lunch*):\r\n\r\n    python streamer.py \"water drink\" \"eat lunch\"\r\n    \r\n## Output Format ##\r\nThe default output mode is to dump the raw stream data status text for each received\r\nelement, followed by a newline.\r\n\r\nEach raw stream element is expected to be a well-formed JSON object, but at present the\r\nstream elements are not separated by commas, nor is the stream wrapped in a JSON\r\nlist.  Therefore, if you expect to parse the output of this program as JSON\r\ndata, you will need to process it into well-formed JSON, or take each element as\r\nan independent JSON object rather than treat the stream as a JSON array.\r\n## Experimental Features ##\r\n### Field Output Selectors ###\r\nThe `-f` (or `--fields`) parameter allows a comma-separated list of output fields.\r\nThe field values will be emitted in the order listed in the given `-f` \r\nparameter value.  Output will be formatted as CSV records.\r\n\r\nYou can access nested elements by using dotted notation: `user.name` accesses \r\nthe `name` element of the `user` object.  See Twitter's [tweets][twitter-tweets] \r\nstructure reference for a list of valid elements. \r\n\r\nIf you reference a non-existent element, the output column will be empty. \r\nIf you prefer to have an error message displayed and terminate processing\r\nspecify the `-t` or `--terminate-on-error` option. \r\n\r\nExample 1: *list created_at and text fields for 'elections'*\r\n\r\n    python streamer.py -f \"created_at,text\" elections\r\n\r\nExample results:\r\n\r\n    2012-11-09 20:26:47 Volatility the Likely Outcome of Elections http://t.co/trmmSpXp #Barron's\r\n    2012-11-09 20:26:50 @WHLive then why the president ordered Boeing to release the layoff news AFTER the elections?\r\n\r\nExample 2: *list user.name and text fields for tweets containing dogs *and* cats*\r\n\r\n    python streamer.py -f \"user.name,text\" \"dogs cats\"\r\n    \r\nExample Results:\r\n\r\n    User name 1,Cats and dogs in Mexico. http://t.co/gYJvhdvv\r\n    User name 2,I actually like both cats and dogs but I've been an introvert for about 27 years now.\r\n\r\n## To be done ##\r\nSee TODO.md\r\n## Known issues ##\r\n* Needs a bit of cleanup -- obsolete code remains from prior project and should\r\nbe refactored or removed.\r\n* General error handling needs work.  \r\n    The current default mode retries the connection with a delay\r\nin the event of most failures; this keeps Streamer running despite network\r\nproblems or other errors.  \r\n    If you specify the `--terminate-on-errors` (`-t`) option, Streamer will\r\n    terminate with an error message on errors.  This is a work in progress. \r\n* Configuration (.ini) file error handling needs work.\r\n    Errors due to misconfiguration probably need better handling and reporting. \r\n* Log messages go to stderr.\r\n\r\n##License##\r\n(MIT License) - Copyright (c) 2012 [Exodus Development, Inc.](http://exodusdev.com) except \r\nwhere otherwise noted.\r\n  \r\n[streaming-apis]: https://dev.twitter.com/docs/streaming-apis\r\n[parameters-track]: https://dev.twitter.com/docs/streaming-apis/parameters#track \r\n[statuses-filter]: https://dev.twitter.com/docs/api/1.1/post/statuses/filter\r\n[keys]: https://dev.twitter.com/docs/faq#7447\r\n[tweepy]: https://github.com/tweepy/tweepy\r\n[twitter-tweets]: https://dev.twitter.com/docs/platform-objects/tweets\r\n","tagline":"Dump Twitter API statuses/filter streams."}